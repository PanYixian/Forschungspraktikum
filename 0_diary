------------------------------------------------------------------------------------------------------------------------------------------------------------------
31.08.2020

    debug for task2: getting to understand April's "make good use of cout/printf for debugging, which is really powerful and helpful"

------------------------------------------------------------------------------------------------------------------------------------------------------------------
28.08.2020

    SVD from lapack: implemented with Accelerate, not getting the output right
    SVD from https://www.codeproject.com/Articles/1268576/Singular-Values-Decomposition-SVD-In-Cplusplus11-B, modify and try for superimpose

------------------------------------------------------------------------------------------------------------------------------------------------------------------
27.08.2020

    refine task1:
        - create n*n matrix for characteristic relative distances (rel_dis)
        - sort the rel_dis for each atom
        - compare i-th atom from 1st file and j-th atom from 2nd file, calculate total deviation of k-th rel_dis
        - switch j-th to i-th in 2nd file if the total deviation is smaller than last one
        (not working well for totally symmetric molecules)

------------------------------------------------------------------------------------------------------------------------------------------------------------------
26.08.2020

    Segmentation fault: 11 ....

------------------------------------------------------------------------------------------------------------------------------------------------------------------
25.08.2020

    about debug:
        bisection search for bugs & make the use of print statement
        modulize the program
        
    play with Lapack~

------------------------------------------------------------------------------------------------------------------------------------------------------------------
24.08.2020

    Kabsch Algprithm:
        learn about using the more common library Lapack and VMD (so lack of fundamental knowledge....)
    
    when comparing the relative distance (rel_dis) of each atom in 2 files, change the condition from "equal" to "minimal total deviation"
    because rel_dis may be slightly different, "equal" does not work anymore

------------------------------------------------------------------------------------------------------------------------------------------------------------------
21.08.2020

    Kabsch Algorithm:
        - write the codes for Singular Value Decomposition (SVD)
        - give it a try before applying library
        - stuck by calculating eigenvalues and eigenvectors, turn to external library Eigen

------------------------------------------------------------------------------------------------------------------------------------------------------------------
20.08.2020

    (? rewrite 2nd file or print out in a 3rd file) rewrite 2nd file
    
    when calculating the center of mass, the n atoms are assumed to have the same mass 1 (centroid: x = sum_of_x_i / n, y = sum_of_y_i / n, z = sum_of_z_i / n)
    how different would it be if the real atom masses are used? or it does not really matter here in molecule alignment with the same geometry? would it matter
    for different geometry or slight change of functional group?
    
    present task1 to April:
        - align the output with same fixed digits (solved)
        - try to deal with totally symmetric molecules
    
    Kabsch Algorithm:
        - function RMSD, root mean square deviation
        - calculate the centroid
        - execute translation and overlap the centroid (would it be better to move both centroids to origin)
        - kabsch, find the optimal rotation matrix

------------------------------------------------------------------------------------------------------------------------------------------------------------------
19.08.2020

    finish task1: same geometry, different atom order in 2 files
        calculate the relative distance (rel_dis) between all atoms
        sort the rel_dis, which is characteristic for each atom (exception not considered for the time being: symetric molecule)
        compare the rel_dis of each atom in 2 files, change the atom order in 2nd file into 1st file
        (a lot of loops now, think about optimization)
    
------------------------------------------------------------------------------------------------------------------------------------------------------------------
18.08.2020

    translation of the molecule
    try to write a function to execute translation, which can get main() simpler and clearer
    however, for the time being, pointer does not work with 2D vector, without pointer the value outside the function is not changed
        (go find more about vector)
        
    the 1976 & 1978 (Acta. Cryst.) Kabsch papers are still too abstractly hard to perceive....
    
    MOLFIT: A computer program for molecular superposition (P.K.Redington, Computers & Chemistry, Volume 16, Issue 3, 1992, 217-222)
        direct noniterative method for determining the unitary matrix which superimposes one structure upon the other
        refine by improved SS algorithm (1991, Sippl & Stegbuchner)
        !!! place the molecule centers at the origin (0,0,0)

------------------------------------------------------------------------------------------------------------------------------------------------------------------
17.08.2020

    start of 1. Forschungspraktikum
    read the coordinate data and store as 2D vector
    calculate the center of mass, assuming all atomes with the same mass 1
        (think about using the real mass)
    
    the difference between array and vector: 
        the size of array is fixed/static, the size of vector is dynamic
        no big difference for this project because the number of atoms is given in the input files
        currently have problem with pointer in vector, think about using array[n,3] or constructing a specific class 

------------------------------------------------------------------------------------------------------------------------------------------------------------------
