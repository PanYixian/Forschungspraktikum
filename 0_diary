------------------------------------------------------------------------------------------------------------------------------------------------------------------
28.10.2020
    
    8_task5_rel_dis+angle:
        implementing angular information of the 10 nearest neighbors of each atom in rel_dis matrix
        works well

------------------------------------------------------------------------------------------------------------------------------------------------------------------
20.10.2020
    
    8_task5_descriptor:
        implement the descriptor information from April's code aenet

------------------------------------------------------------------------------------------------------------------------------------------------------------------
19.10.2020
    
    8_task5_filling_max_rel_dis: 2nd idea for task5:
        implement element type comparison
        works well when replacing one H with CH3 for small molecule (aspirin), badly when replacing two H with CH3
        works well when replace one or two H with CH3 (pent_A_center_R), badly when replacing three H with CH3

------------------------------------------------------------------------------------------------------------------------------------------------------------------
16.10.2020
    
    include element type comparison for 2nd and 3rd idea:
        not improving the result
        include it in a better way??

------------------------------------------------------------------------------------------------------------------------------------------------------------------
15.10.2020

    8_task5_cutoff_radius+angle: 3rd idea for task5:
        add angular information for each atom
            calculate cosine of the angles of each atom (as origin) expanded with the neighbors within cutoff_radius
        
    one problem about the sorting in my code:
        compare working with reference and calculate the deviations, find out the minimal deviation and switch the order
        is it possible that this atom from working has a smaller deviation with another atom in reference? 
        but this atom from working is then already fixed and doesnot have the chance to compare with other atoms from reference anymore
    
    suggestions from Johannes:
        less distortion to molecules for task5, focus more on different functional groups
        add information of chemical elements instead of angular information

------------------------------------------------------------------------------------------------------------------------------------------------------------------
14.10.2020
    
    8_task5_cutoff_radius: 3rd idea for task5:
        use the local environment of atoms as "fingerprint"
        collect only the relative distances smaller than cutoff_radius in the rel_dis matrix, fill the blank with a large max_rel_dis
        compare the rel_dis matrix and sort the atoms 
        
        works worse than 2nd idea

------------------------------------------------------------------------------------------------------------------------------------------------------------------
13.10.2020

    7_task4_Eigen: 
        tried distorted molecule without chemistry sense, code still did the superimpose, though in a rough way (the algorithm is amazing....)
    
        realize 3rd idea for task5 using graph theory

------------------------------------------------------------------------------------------------------------------------------------------------------------------
12.10.2020

    code using Eigen works fine for task2, task3 and task4:
        need to do: test task4 with larger distortion till it doesnot work anymore
    
    8_task_5_special_atom: 1st idea for task5: 
        suppose that there are two special atoms which are not C,H,O
        find out the two special atoms and centroids, move centroids to origin
        apply Kabsch Algorithm to these point sets of three and construct rotation matrix
        apply the rotation to working coordination
        (no reordering of atoms)
        the code works, but the problem it solves is too narrow and specific
    
    8_task5_filling_max_rel_dis: 2nd idea for task5
        the molecules are with different number of atoms 
        (assuming that reference is with less atom)
        different size of the matrix rel_dis (not comparable)
        in order to reorder the atoms by comparing rel_dis matrix, find a maximal rel_dis in reference
        construct rel_dis matrix, augment the smaller rel_dis matrix by filling the blank with the maximal rel_dis
        same procedure as in task2/3/4
        
        the code works, but imperfectly
        reordering of the atoms in working coord might be only working for the first few atoms (n < 10), apply Kabsch to fewer atoms ??
        applying Kabsch with fewer atoms gives worse result
        
    Reflection: the major problem is always how to create "fingerprint" for each atom so that they can be identifiable
        the solution so far is atom-atom relative distance, which is not suitable anymore for input with different number of atoms
        new idea for differentiating atoms: cutoff radius, identifying only the local environment of atoms and make it the "fingerprint"
    
    3rd idea for task5: cutoff radius
        (graph theory)
        set the cutoff radius to be 1.5 times of C-C bond: 2.3 angstrom
        
------------------------------------------------------------------------------------------------------------------------------------------------------------------
07.10.2020

    code using Eigen works fine for both task2 and task3
        (run more tests with different molecules and larger distortion)
        1: read in reference and working coordinates, calculate centroids
        2: translate centroids to origin
        3: calculate the relative atom-atom distances rel_dis matrix, reorder 2nd file by finding the rel_dis vector with least deviation
        4: apply Kabsch algorithm, construct rotation matrix
        5: move the rotated centroid to centroid_0

    regarding task5: is it possible to locate the "backbone" of two molecules and apply Kabsch Algorithm only to the "backbone(with same number of atoms)"?

------------------------------------------------------------------------------------------------------------------------------------------------------------------
06.10.2020

    modified code from "https://github.com/oleg-alexandrov/projects/blob/master/eigen/Kabsch.cpp"
        a bit of amazed by the use of external library Eigen: how it has simplified the code (matrix representation, multiplication etc.)
        but roughly sense that heavy use of Eigen slows down the program, is it true?
    
    combine the code above with my own

------------------------------------------------------------------------------------------------------------------------------------------------------------------
05.10.2020

    principle of Kabsch Algorithm
    
    modify the code from "https://github.com/oleg-alexandrov/projects/blob/master/eigen/Kabsch.cpp"

------------------------------------------------------------------------------------------------------------------------------------------------------------------
16.09.2020

    use Eigen to solve SVD and construct rotation matrix, works in a rough way
        works perfectly when superimposing plane triangles, works terriblely when adding dimension to tetrahedral
        seems weirdly squash 3D object onto plane....
        (squash problem solved, result not accurate enough)
        
    try to improve Eigen and code_1
    still not getting the output right from lapack

------------------------------------------------------------------------------------------------------------------------------------------------------------------
14.09.2020

    modified code from "https://github.com/willhooper/superpose/blob/master/src/superimposer.cpp" works
        root-mean-square deviation (RMSD) decreases from 5.50286232 to 0.18417864 for example aspirin input
        not ideal for the 2 input molecules with exact same geometry

------------------------------------------------------------------------------------------------------------------------------------------------------------------
09-10.09.2020

    use Eigen to solve SVD
    construct rotation matrix, yet not working properly

------------------------------------------------------------------------------------------------------------------------------------------------------------------
01 - 04, 07 - 08, 17 - 18, 21, 29.09.2020 

    Polymerpraktikum

------------------------------------------------------------------------------------------------------------------------------------------------------------------
31.08.2020

    debug for task2: getting to understand April's "make good use of cout/printf for debugging, which is really powerful and helpful"

------------------------------------------------------------------------------------------------------------------------------------------------------------------
28.08.2020

    SVD from lapack: implemented with Accelerate, not getting the output right
    SVD from https://www.codeproject.com/Articles/1268576/Singular-Values-Decomposition-SVD-In-Cplusplus11-B, modify and try for superimpose

------------------------------------------------------------------------------------------------------------------------------------------------------------------
27.08.2020

    refine task1:
        - create n*n matrix for characteristic relative distances (rel_dis)
        - sort the rel_dis for each atom
        - compare i-th atom from 1st file and j-th atom from 2nd file, calculate total deviation of k-th rel_dis
        - switch j-th to i-th in 2nd file if the total deviation is smaller than last one
        (not working well for totally symmetric molecules)

------------------------------------------------------------------------------------------------------------------------------------------------------------------
26.08.2020

    Segmentation fault: 11 ....

------------------------------------------------------------------------------------------------------------------------------------------------------------------
25.08.2020

    about debug:
        bisection search for bugs & make the use of print statement
        modulize the program
        
    play with Lapack~

------------------------------------------------------------------------------------------------------------------------------------------------------------------
24.08.2020

    Kabsch Algprithm:
        learn about using the more common library Lapack and VMD (so lack of fundamental knowledge....)
    
    when comparing the relative distance (rel_dis) of each atom in 2 files, change the condition from "equal" to "minimal total deviation"
    because rel_dis may be slightly different, "equal" does not work anymore

------------------------------------------------------------------------------------------------------------------------------------------------------------------
21.08.2020

    Kabsch Algorithm:
        - write the codes for Singular Value Decomposition (SVD)
        - give it a try before applying library
        - stuck by calculating eigenvalues and eigenvectors, turn to external library Eigen

------------------------------------------------------------------------------------------------------------------------------------------------------------------
20.08.2020

    (? rewrite 2nd file or print out in a 3rd file) rewrite 2nd file
    
    when calculating the center of mass, the n atoms are assumed to have the same mass 1 (centroid: x = sum_of_x_i / n, y = sum_of_y_i / n, z = sum_of_z_i / n)
    how different would it be if the real atom masses are used? or it does not really matter here in molecule alignment with the same geometry? would it matter
    for different geometry or slight change of functional group?
    
    present task1 to April:
        - align the output with same fixed digits (solved)
        - try to deal with totally symmetric molecules
    
    Kabsch Algorithm:
        - function RMSD, root mean square deviation
        - calculate the centroid
        - execute translation and overlap the centroid (would it be better to move both centroids to origin)
        - kabsch, find the optimal rotation matrix

------------------------------------------------------------------------------------------------------------------------------------------------------------------
19.08.2020

    finish task1: same geometry, different atom order in 2 files
        calculate the relative distance (rel_dis) between all atoms
        sort the rel_dis, which is characteristic for each atom (exception not considered for the time being: symetric molecule)
        compare the rel_dis of each atom in 2 files, change the atom order in 2nd file into 1st file
        (a lot of loops now, think about optimization)
    
------------------------------------------------------------------------------------------------------------------------------------------------------------------
18.08.2020

    translation of the molecule
    try to write a function to execute translation, which can get main() simpler and clearer
    however, for the time being, pointer does not work with 2D vector, without pointer the value outside the function is not changed
        (go find more about vector)
        
    the 1976 & 1978 (Acta. Cryst.) Kabsch papers are still too abstractly hard to perceive....
    
    MOLFIT: A computer program for molecular superposition (P.K.Redington, Computers & Chemistry, Volume 16, Issue 3, 1992, 217-222)
        direct noniterative method for determining the unitary matrix which superimposes one structure upon the other
        refine by improved SS algorithm (1991, Sippl & Stegbuchner)
        !!! place the molecule centers at the origin (0,0,0)

------------------------------------------------------------------------------------------------------------------------------------------------------------------
17.08.2020

    start of 1. Forschungspraktikum
    read the coordinate data and store as 2D vector
    calculate the center of mass, assuming all atomes with the same mass 1
        (think about using the real mass)
    
    the difference between array and vector: 
        the size of array is fixed/static, the size of vector is dynamic
        no big difference for this project because the number of atoms is given in the input files
        currently have problem with pointer in vector, think about using array[n,3] or constructing a specific class 

------------------------------------------------------------------------------------------------------------------------------------------------------------------
