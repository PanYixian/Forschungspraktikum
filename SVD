#include <iostream>
#include <vector>
#include <Accelerate/Accelerate.h>

using namespace std;

//extern "C" void dgetrf_(int* dim1, int* dim2, double* a, int* lda, int* ipiv, int* info);
//extern "C" void dgetrs_(char *TRANS, int *N, int *NRHS, double *A, int *LDA, int *IPIV, double *B, int *LDB, int *INFO );
//extern "C" void sgesvd_(char *JOBU, char *JOBVT, int *M, int *N, double *A, int *LDA, double *S, double *U, int *LDU, double *VT, int *LDVT, double *WORK, int *LWORK, int *INFO);

int main()
{
    char JOBU = 'A';
    char JOBVT = 'A';
    int M = 4, N = 2;
    int LDA = M, LDU = M, INFO = 0, LWORK = 16, LDVT = 4;

    vector<float> A, S, U, VT, WORK;

    A.push_back(2);
    A.push_back(4);
    A.push_back(1);
    A.push_back(3);
    A.push_back(0);
    A.push_back(0);
    A.push_back(0);
    A.push_back(0);

//    dgetrf_(&dim, &dim, &*a.begin(), &LDA, ipiv, &info);
//    dgetrs_(&trans, &dim, &nrhs, & *a.begin(), &LDA, ipiv, & *b.begin(), &LDB, &info);
    sgesvd_(&JOBU, &JOBVT, &M, &N, &*A.begin(), &LDA, &*S.begin(), &*U.begin(), &LDU, &*VT.begin(), &LDVT, &*WORK.begin(), &LWORK, &INFO);

    cout << "U is:";
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            cout << U[i] << " ";
        }
        cout << endl;
    }

    cout << "S is:";
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 2; j++) {
            cout << S[i] << " ";
        }
        cout << endl;
    }

    cout << "V^T is:";
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 2; j++) {
            cout << VT[i] << " ";
        }
        cout << endl;
    }

    cout << "Info = " << INFO << endl;

    return(0);
}



//#include <iostream>
//#include <vector>
//
//using namespace std;
//
//extern "C" void dgetrf_(int* dim1, int* dim2, double* a, int* lda, int* ipiv, int* info);
//extern "C" void dgetrs_(char *TRANS, int *N, int *NRHS, double *A, int *LDA, int *IPIV, double *B, int *LDB, int *INFO );
//
//int main()
//{
//    char trans = 'N';
//    int dim = 2;
//    int nrhs = 1;
//    int LDA = dim;
//    int LDB = dim;
//    int info;
//
//    vector<double> a, b;
//
//    a.push_back(1);
//    a.push_back(1);
//    a.push_back(1);
//    a.push_back(-1);
//
//    b.push_back(2);
//    b.push_back(0);
//
//    int ipiv[3];
//
//    dgetrf_(&dim, &dim, &*a.begin(), &LDA, ipiv, &info);
//    dgetrs_(&trans, &dim, &nrhs, & *a.begin(), &LDA, ipiv, & *b.begin(), &LDB, &info);
//
//
//    std::cout << "solution is:";
//    std::cout << "[" << b[0] << ", " << b[1] << "]" << std::endl;
//    std::cout << "Info = " << info << std::endl;
//
//    return(0);
//}



//int main()
//{
//    char trans = 'N';
//    int dim = 2;
//    int nrhs = 1;
//    int LDA = dim;
//    int LDB = dim;
//    int info;
//
//    vector<double> a, b;
//
//    a.push_back(1);
//    a.push_back(1);
//    a.push_back(1);
//    a.push_back(-1);
//
//    b.push_back(2);
//    b.push_back(0);
//
//    int ipiv[3];
//
//    dgetrf_(&dim, &dim, &*a.begin(), &LDA, ipiv, &info);
//    dgetrs_(&trans, &dim, &nrhs, & *a.begin(), &LDA, ipiv, & *b.begin(), &LDB, &info);
//
//
//    std::cout << "solution is:";
//    std::cout << "[" << b[0] << ", " << b[1] << ", " << "]" << std::endl;
//    std::cout << "Info = " << info << std::endl;
//
//    return(0);
//}
