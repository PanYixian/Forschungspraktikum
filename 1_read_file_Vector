___________________________________________________________________________________________________________________________________________________
//read and store .xyz file as 2D vector

#include <iostream>
#include <fstream>
#include <vector>
using namespace std;

int main()
{
    ifstream fin;
    ofstream fout;
    int atom_num;                                      //the number of atoms in the molecule
    
    
    fin.open("pent_A_center_S.xyz");                   //open the .xyz file and check whether it works
    if(fin.fail())
        cout << "File failed to open." << endl;


    fin >> atom_num;                                   //read in the number of atoms


    string energy[4];                                  //deal with the second line concerning energy
    for (int i = 0; i < 4; i++) {
        fin >> energy[i];
        cout << energy[i] << " ";
    }
    cout << endl;
    
    
    int i,j;                                           //start reading in the coordinates
    vector<vector<double>> coord(atom_num);            //define a 2D vector to store the coordinates
    string atom_type[atom_num];                        //the type of atoms
    
    
    for (i = 0; i < coord.size(); i++)                 //define 3 coordinates (x,y,z) for each atom
        coord[i].resize(3);

    for(i = 0; i < coord.size(); i++)
    {
        fin >> setprecision(9) >> atom_type[i];        //read in the type of each atom
        cout << atom_type[i] << "\t";
        for (j = 0; j < 3;j++)
        {
            fin >> coord[i][j];                        //read in the coordinates x,y,z for each atom
            cout << setprecision(9)
            << coord[i][j] << "\t";
        }
        cout << endl;
    }
    
    
    return 0;
}

___________________________________________________________________________________________________________________________________________________


___________________________________________________________________________________________________________________________________________________
//value passing and address passing into function, the use of pointer

#include <iostream>
using namespace std;


struct student {
    string name;
    int age;
    int score;
};

//pass the value into function, value in main not gonna be changed
void printStudent_1(student s1){
    s1.age = 28;
    cout << "----------apply print function 1----------" << endl;
    cout << "Name: " << s1.name << endl;
    cout << "Age: " << s1.age << endl;
    cout << "Score: " << s1.score << endl;
}

//pass the address into function by pointer, value in main changes
void printStudent_2(student *s1){
    s1->age = 28;
    cout << "----------apply print function 2----------" << endl;
    cout << "Name: " << s1->name << endl;
    cout << "Age: " << s1->age << endl;
    cout << "Score: " << s1->score << endl;
}


int main() {
    
    student s1 = {"Ana", 23, 90};
    cout << "before applying function, age = " << s1.age << endl;
    printStudent_1(s1);
    cout << "after applying function 1, age = " << s1.age << endl;
    printStudent_2(&s1);
    cout << "after applying function 2, age = " << s1.age << endl;
    
    return 0;
}


___________________________________________________________________________________________________________________________________________________
//passing an array into a function is already passing address, it functions like pointer

#include <iostream>
using namespace std;


struct student {
    string name;
    int age;
    int score;
};

void bubbleSort(student stud[], int len){
    for (int i = 0; i < len - 1; i++) {
        for (int j = i; j < len; j++) {
            if (stud[i].age > stud[j].age) {
                student temp = stud[i];
                stud[i] = stud[j];
                stud[j] = temp;
            }
        }
    }
}

void printList(student stud[], int len){
    for (int i = 0; i < len; i++) {
        cout << stud[i].name << " " << stud[i].age << " " << stud[i].score << endl;
    }
}

int main() {
    
    student stud[] = {
        {"Ana", 23, 90},
        {"John", 22, 89},
        {"May", 24, 88},
        {"Kevin", 21, 98},
        {"Lay", 25, 94},
    };
    
    int len = sizeof(stud) / sizeof(stud[0]);
    
    printList(stud, len);
    bubbleSort(stud, len);
    cout << "------------------------------" << endl;
    printList(stud, len);
    
    return 0;
}


___________________________________________________________________________________________________________________________________________________



___________________________________________________________________________________________________________________________________________________



___________________________________________________________________________________________________________________________________________________
